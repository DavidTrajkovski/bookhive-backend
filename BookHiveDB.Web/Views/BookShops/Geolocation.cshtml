@{
    ViewData["Title"] = "Geolocation";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin=""></script>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&display=swap" rel="stylesheet">

    <style>
        body {
            background-color: #FC766A;
            font-family: 'IBM Plex Sans', sans-serif;
        }

        #map {
            width: auto;
            height: 500px;
        }
    </style>

</head>
<body>
    <h1 style="font-family: 'Oswald', sans-serif;" class="text-center">Overview of the bookshops where you can find the selected book:</h1>
    <div id="map"></div>
    <div style="margin-top: 30px; margin-left: 30px; margin-right: 30px;  font-size: 25px;" id="information">
        <div id="distance"></div>
        <div id="duration"></div>
    </div>
    <input type="hidden" id="bookId" value=@ViewData["bookId"]>

    <div class="ml-5 mt-3">
        <div class="ml-5">
            <a asp-controller="Books" asp-action="Details" asp-route-id="@ViewData["bookId"]" class="ml-5 btn btn-primary">Back to Book Details</a>
        </div>
    </div>



    <script>


        var selectedStoreName = "No store selected"
        var bookicon = L.icon({
            iconUrl: '/bookstore_1.png',
            iconSize: [70, 70],
            iconAnchor: [19, 40],
            popupAnchor: [0, -40]
        });

        var map = L.map('map').setView([41.621, 21.690], 8);
        const attribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
        const tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
        const tiles = L.tileLayer(tileUrl, { attribution })
        tiles.addTo(map);

        let myPosition;
        function geolocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(markPosition);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }
        function markPosition(position) {
            myPosition = L.marker([position.coords.latitude, position.coords.longitude]).addTo(map);
            getMapInfo(myPosition, selectedStore);
        }
        async function getMapInfo(start, end) {
            console.log("success map info");
            const url = "https://api.openrouteservice.org/v2/directions/driving-car?api_key=5b3ce3597851110001cf6248995993511b5947b081e0eedbc69cb402&start=" + start.getLatLng().lng + "," + start.getLatLng().lat + "&end=" + end.getLatLng().lng + "," + end.getLatLng().lat;
            let info = await fetch(url);
            let data = await info.json();
            let points = data.features[0].geometry.coordinates.map(x => x.reverse());
            L.polyline(points, { color: '#b41238', opacity: 1, weight: 5 }).addTo(map);
            let distance = data.features[0].properties.summary.distance;
            let duration = data.features[0].properties.summary.duration;
            document.getElementById("information").hidden = false;
            document.getElementById("distance").innerHTML = "The distance from your location to " + selectedStoreName + " is <strong>" + (distance / 1000).toFixed(1) + " kilometers</strong>."
            document.getElementById("duration").innerHTML = "The time to arrive to " + selectedStoreName + " with a car is <strong>" + (duration / 60).toFixed(0) + " minutes</strong>."
        }

        async function loadBookshops() {
            var bookId = document.getElementById("bookId").value
            console.log("Book id is " + bookId)
            const url = "/api/BookShopApi/getBookShopsByBook?id=" + bookId;
            let items = await fetch(url);
            let parsed = await items.json();
            for (let item of parsed) {
                console.log("Adding bookshop: " + item.latitude + " " + item.longitude + " name: " + item.name)
                let marker = L.marker([item.latitude, item.longitude], { icon: bookicon }).addTo(map).bindPopup("<h3>" + item.name + "</h3><br><a style='width: 290px' class='btn btn-outline-dark' href=/bookshops/details/" + item.id + ">Detailed view</a>");
                marker.on('click', () => {
                    selectedStore = marker;
                    selectedStoreName = item.name;
                    geolocation()
                });
            }
        }
        loadBookshops();




    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</body>
</html>